<title>Job Spotter Spotter</title>
<link rel="stylesheet" type="text/css" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script type="text/javascript" src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/stylesheets/main.css" />
<script rel="text/javascript" src="../scripts/maps-helper.js"></script>
<meta name="viewport" content="width=device-width, initial-scale=1">

<!-- Firebase -->
<script src="https://www.gstatic.com/firebasejs/4.13.0/firebase.js"></script>
<script src="https://cdn.firebase.com/libs/firebaseui/2.5.1/firebaseui.js"></script>
<link type="text/css" rel="stylesheet" href="https://cdn.firebase.com/libs/firebaseui/2.5.1/firebaseui.css" />

<script>
  // Initialize Firebase
  var config = {
    apiKey: "AIzaSyDqotlDzQeBl6gRI9POriJqBTPPGMVkG98",
    authDomain: "jobspotterspotte-1524846262832.firebaseapp.com",
    databaseURL: "https://jobspotterspotte-1524846262832.firebaseio.com",
    projectId: "jobspotterspotte-1524846262832",
    storageBucket: "jobspotterspotte-1524846262832.appspot.com",
    messagingSenderId: "621873008417"
  };
  firebase.initializeApp(config);
</script>

<script>
  var userId = null
    firebase.auth().onAuthStateChanged(async function(user) {
      if (user) {
        // User is signed in.
        console.log('U2: ', user)
        $('#nav-user').text(user.displayName)
        userId = await getUserIdFromEmail(user.email)
        console.log('UserId: ', userId)

      } else {
        var provider = new firebase.auth.GoogleAuthProvider();
        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)
        .then(() =>
          firebase.auth().signInWithPopup(provider).then(async function(result) {
            // This gives you a Google Access Token. You can use it to access the Google API.
            var token = result.credential.accessToken;
            // The signed-in user info.
            var user = result.user;
            // ...
            console.log('User: ', user)
            $('#nav-user').text = user.displayName

            userId = await getUserIdFromEmail(user.email)
          }).catch(function(error) {
            // Handle Errors here.
            var errorCode = error.code;
            var errorMessage = error.message;
            // The email of the user's account used.
            var email = error.email;
            // The firebase.auth.AuthCredential type that was used.
            var credential = error.credential;
            // ...
          })
        );
      }
    });

    function signout() {
      console.log('Sign out! ')
      firebase.auth().signOut()
    }

    async function getUserIdFromEmail(email) {
      const url = '/getUserId';
      return fetch(url)
        .then((resp) => resp.json())
        .then(function(data) {
          console.log('Data: ', data)
          return data.uid;
        })
    }
  </script>